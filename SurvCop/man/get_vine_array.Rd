% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_vine_array.r
\name{get_vine_array}
\alias{get_vine_array}
\title{Get a vine array based on different optimization criteria}
\usage{
get_vine_array(rmat, n, method = "MSTx", cfi_bd = 0.95, debug = FALSE)
}
\arguments{
\item{rmat}{Correlation matrix.}

\item{n}{Sample size.}

\item{method}{Currently support "enumx", "MSTx", "MSTleaf", "forwardD", "forwardR". Default: "MSTx". See Details for explanations.}

\item{cfi_bd}{Lower bound of CFI (comparative fit index) to stop, default 0.95, set to 1.01 for no truncation.}

\item{debug}{Debug flag.}
}
\value{
Returns a list with the following named components:
\enumerate{
 \item \code{vine_array} - vine array to truncation level
 \item \code{trunc_level} - truncation level to reach cfi_bd
 \item \code{cfi} - CFI value
 \item \code{cfi_vector} - vector of CFI values
 \item \code{treeweight} - vector of tree weights by tree, level
 \item \code{fitval} - cumsum(treeweight)/\eqn{sum_{1:(d-1)} treeweight}
 \item \code{pcmat} - matrix of partial correlations by tree
}
}
\description{
Find a vine structure from a correlation matrix based on different optimization criteria
}
\details{
(a) enumx: for number of covariates <=7; enumeration as in Section 6.13 of Joe (2014).\cr
(b) MSTx: sequential minimal spanning trees by vine level; see Section 6.17 of Joe (2014) and Chang and Joe (2019).\cr
(c) MSTleaf: sequential minimal spanning trees with response variable y forced to be a leaf on each vine tree.\cr
(d) forwardD: Forward selection D-vine as in Kraus and Czado (2017) when restricted to gaussian pair-copulas.
That is, covariates are added sequentially, with forward selection based on partial correlations.\cr
(e) forwardR: Forward selection as in forwarD, but then the covariates are linked in an R-vine.
Because the aim is to have strong correlations and partial correlations in the low level trees, the heuristic is similar to MSTx.
See Section 5.4 of Herrmann (2019).
}
\examples{
##See the donkey data vigenette for a comparison of 4 of the methods.

}
\references{
1. Kraus D. and Czado C., 2017. D-vine copula based quantile regression.
Comput. Statist. Data Anal. 110, 1-18. \cr
2. Chang B and Joe H 2019. Prediction based on conditional distributions.
Comput. Statist. Data Anal. 139, 45-63. \cr
3. Herrmann, J S (2019).
Regular vine copula based quantile regression.
MSc Thesis, Technische Universitaet Muenchen. \cr
4. Joe H (2014). Dependence Models with Copulas. Chapman-Hall/CRC
}
